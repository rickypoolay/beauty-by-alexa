import { ArrowLeftIcon, ArrowRightIcon, XIcon } from "@heroicons/react/solid";
import { motion } from "framer-motion";
import Head from "next/head";
import Image from "next/image";
import { useState, useEffect } from "react";
import LeftLine from "../components/LeftLine";
import Navbar from "../components/Navbar";
import PageHeader from "../components/PageHeader";
import { sanityClient, urlFor } from "../utils/sanity";

function Gallery({ properties }) {
  const [selectedIMG, setSelectedIMG] = useState();

  return (
    <div>
      <Navbar />
      <Head>
        <title>Beauty By Alexa | Gallery</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <LeftLine />

        {/* Popup Image */}
        {selectedIMG && (
          <div className="fixed top-0 z-50 w-[100vw] h-[100vh] flex justify-center items-center backdrop-blur-sm select-none">
            <div className="absolute w-[100vw] h-[100vh] bg-custom-black bg-opacity-60 " />
            <XIcon
              className="w-12 h-12 absolute top-10 right-10 cursor-pointer z-10 p-2 border rounded-full xl:scale-150 bg-opacity-10 bg-white"
              onClick={() => setSelectedIMG()}
            />
            {/* <ArrowLeftIcon
              className="absolute text-white z-50 w-12 h-12 p-2 border rounded-full left-5 lg:left-[10vw] xl:scale-150 cursor-pointer shadow-2xl bg-white bg-opacity-10"
              onClick={() => {
                const selectedIndex = properties.findIndex(
                  (item) => (item = properties)
                );

                if (selectedIndex < 1) {
                  setSelectedIMG(properties[properties.length]);
                } else {
                  setSelectedIMG(properties[selectedIndex - 1]);
                }
              }}
            /> */}
            {/* <ArrowRightIcon
              className="absolute text-white z-50 w-12 h-12 p-2 border rounded-full right-5 lg:right-[10vw] xl:scale-150 cursor-pointer shadow-2xl bg-white bg-opacity-10"
              onClick={() => {
                const selectedIndex = properties.findIndex(
                  (item) => (item = properties)
                );

                if (selectedIndex == properties.length) {
                  setSelectedIMG(properties[properties.length - 1]);
                } else {
                  setSelectedIMG(properties[selectedIndex + 1]);
                }
              }}
            /> */}
            <p className="z-10 absolute left-1/2 top-12 md:top-10 -translate-x-1/2 italic text-custom-black p-2 bg-custom-background rounded-md">
              {selectedIMG.caption}
            </p>
            <div className=" relative w-full h-5/6 mx-2 mt-auto mb-10">
              <Image
                className=""
                priority
                layout="fill"
                objectFit="contain"
                src={urlFor(selectedIMG.image).url()}
                alt=""
              />
            </div>
          </div>
        )}

        <section>
          <PageHeader title={"Gallery"} info={""} />

          <div className="grid grid-cols-2 sm:grid-cols-3  gap-y-1 gap-x-1 justify-center items-center mt-5">
            {properties.map((img) => (
              <motion.div
                className="relative rounded-sm min-w-[100px] w-full h-full overflow-hidden mx-auto p-3 cursor-pointer"
                key={img.src}
                whileHover={{
                  scale: 1.03,
                  transition: {
                    ease: [0.6, 0.01, -0.05, 0.95],
                  },
                }}
                onClick={() => setSelectedIMG(img)}
              >
                <div className="overflow-hidden">
                  <Image
                    width={"100%"}
                    height={"100%"}
                    layout="responsive"
                    objectFit="cover"
                    b
                    src={urlFor(img.image).url()}
                    alt={img.caption}
                  />
                  <p className="text-center pt-1 text-black text-sm md:text-lg font-bold">
                    {img.caption}
                  </p>
                </div>
              </motion.div>
            ))}
          </div>
        </section>
      </main>
    </div>
  );
}

export const getServerSideProps = async () => {
  const query = '*[_type == "images"]';

  const properties = await sanityClient.fetch(query);

  if (!properties.length) {
    return {
      props: {
        properties: [],
      },
    };
  } else {
    return {
      props: {
        properties,
      },
    };
  }
};

export default Gallery;
